{"version":3,"file":"static/js/359.7331952c.chunk.js","mappings":"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","sources":["Component/AllHistory/LotteryHistory.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport PrimaryLayout from \"../../Component/layouts/PrimaryLayout\";\r\nimport { SearchIcon } from \"../../Assets/icons\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { UnAuth } from \"../../Pages/Auth/UnAuth\";\r\nimport { ENDPOINT } from \"../../App/config/endpoint\";\r\nimport axios from \"axios\";\r\nimport TablePagination from \"../../Component/Shared/TablePagination\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst tableHead = [\r\n  { id: 1, name: \"SL\", width: 10 },\r\n  { id: 2, name: \"User Id\", width: 40 },\r\n  { id: 3, name: \"User Input\", width: 120 },\r\n  { id: 4, name: \"Quantity\", width: 120 },\r\n  { id: 5, name: \"Purchase Time\", width: 140 },\r\n  { id: 6, name: \"User Lucky Number\", width: 180 },\r\n];\r\nconst LotteryHistory = ({ isLoading, setIsLoading }) => {\r\n  const [searchState, setSearchState] = useState(\"\");\r\n  const [tableDatas, setTableDatas] = useState([]);\r\n  const [tableDatas2, setTableDatas2] = useState([]);\r\n  const token = JSON.parse(localStorage.getItem(\"authInfo\"));\r\n  const id = useParams();\r\n\r\n  const handleData = () => {\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_MAIN_URL}${ENDPOINT?.ticket?.soldLottery}${id?.id}`,\r\n        {\r\n          headers: {\r\n            Authorization: \"Token \" + token.token,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.data.type === \"error\") {\r\n          toast.error(res.message);\r\n        } else {\r\n          console.log(\"res.data\", res.data);\r\n          setTableDatas(res.data);\r\n          setTableDatas2(res.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(e);\r\n        UnAuth(e);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    handleData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let arr = [];\r\n    function filter() {\r\n      if (searchState !== \"\") {\r\n        tableDatas.map((dat) => {\r\n          if (\r\n            dat.userInput.toLowerCase().search(searchState.toLowerCase()) !==\r\n              -1 ||\r\n            dat.lotteryId.toLowerCase().search(searchState.toLowerCase()) !== -1\r\n          ) {\r\n            arr.push(dat);\r\n          }\r\n          return true;\r\n        });\r\n      } else {\r\n        tableDatas.map((dat) => {\r\n          arr.push(dat);\r\n          return true;\r\n        });\r\n      }\r\n      return arr;\r\n    }\r\n    filter();\r\n    setTableDatas2(arr);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchState]);\r\n\r\n  // pagination state\r\n  const [data, setData] = useState(tableDatas2);\r\n  const [currentPage, setcurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(10);\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  useEffect(() => {\r\n    setData(tableDatas2);\r\n    setcurrentPage(1);\r\n  }, [tableDatas2]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <PrimaryLayout pageTitle=\"All Sold Ticket\">\r\n        <div className=\"flex flex-col items-center justify-between gap-4 py-10 md:flex-row\">\r\n          <div>\r\n            <h3 className=\"font-poppins text-xl font-semibold text-black lg:text-2xl\">\r\n              Sold Ticket History\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"flex w-full flex-col items-center gap-4 md:w-[unset] md:flex-row\">\r\n            <div className=\"flex w-full items-center\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"h-[38px] w-full rounded-l-lg border border-black px-4 py-2 focus:border-black focus:outline-none\"\r\n                placeholder=\"Search here...\"\r\n                defaultValue={searchState}\r\n                onChange={(e) => setSearchState(e.target.value)}\r\n                required={true}\r\n              />\r\n              <button\r\n                className=\"h-[38px] rounded-r-lg border border-black bg-black px-3 py-2 text-base font-semibold text-white\"\r\n                title=\"\">\r\n                <SearchIcon />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"rounded-lg bg-white pb-3 shadow-md\">\r\n          <div className=\"overflow-x-scroll\">\r\n            <table className=\"w-full\">\r\n              <thead className=\"w-full bg-[#F1F3F7]\">\r\n                <tr className=\"h-16 w-full\">\r\n                  {tableHead?.map((thead) => {\r\n                    return (\r\n                      <th\r\n                        style={{ minWidth: thead.width }}\r\n                        // width={thead.width}\r\n                        key={thead.id}\r\n                        className={`px-2 text-left font-inter text-base font-medium`}>\r\n                        {thead.name}\r\n                      </th>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"relative w-full\">\r\n                {currentItems?.map((tbody, i) => {\r\n                  return (\r\n                    <tr\r\n                      key={i}\r\n                      className=\"h-20 bg-white text-sm leading-none text-gray-800 hover:bg-gray-100\">\r\n                      <td className=\"px-2\">\r\n                        <p className=\"text-left font-poppins text-base font-normal\">\r\n                          {i + 1 < 10 ? `0${i + 1}` : i + 1}\r\n                        </p>\r\n                      </td>\r\n\r\n                      <td className=\"px-2\">\r\n                        <p className=\"text-left font-poppins text-base font-normal\">\r\n                          {tbody?.userId}\r\n                        </p>\r\n                      </td>\r\n                      <td className=\"px-2\">\r\n                        <p className=\"text-left font-poppins text-base font-normal\">\r\n                          {tbody?.userInput}\r\n                        </p>\r\n                      </td>\r\n                      <td className=\"px-2\">\r\n                        <p className=\"text-left font-poppins text-base font-normal\">\r\n                          {tbody?.quantity}\r\n                        </p>\r\n                      </td>\r\n                      <td className=\"px-2\">\r\n                        <p className=\"text-left font-poppins text-base font-normal\">\r\n                          {tbody?.purchaseTime.split(\"T\")[0] +\r\n                            \" : \" +\r\n                            tbody?.purchaseTime.split(\"T\")[1].split(\".\")[0]}\r\n                        </p>\r\n                      </td>\r\n                      <td className=\"px-2\">\r\n                        <p className=\"text-left font-poppins text-base font-normal\">\r\n                          {tbody?.userLuckyNumber}\r\n                        </p>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <TablePagination\r\n            data={data}\r\n            currentPage={currentPage}\r\n            setcurrentPage={setcurrentPage}\r\n            itemsPerPage={itemsPerPage}\r\n          />\r\n        </div>\r\n      </PrimaryLayout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LotteryHistory;\r\n"],"names":["tableHead","id","name","width","_ref","isLoading","setIsLoading","_useState","useState","_useState2","_slicedToArray","searchState","setSearchState","_useState3","_useState4","tableDatas","setTableDatas","_useState5","_useState6","tableDatas2","setTableDatas2","token","JSON","parse","localStorage","getItem","useParams","useEffect","_ENDPOINT$ticket","axios","get","concat","process","ENDPOINT","ticket","soldLottery","headers","Authorization","then","res","data","type","toast","error","message","console","log","catch","e","UnAuth","handleData","arr","map","dat","userInput","toLowerCase","search","lotteryId","push","_useState7","_useState8","setData","_useState9","_useState10","currentPage","setcurrentPage","_useState11","itemsPerPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","_jsx","Fragment","children","_jsxs","PrimaryLayout","pageTitle","className","placeholder","defaultValue","onChange","target","value","required","title","SearchIcon","thead","style","minWidth","tbody","i","userId","quantity","purchaseTime","split","userLuckyNumber","TablePagination"],"sourceRoot":""}