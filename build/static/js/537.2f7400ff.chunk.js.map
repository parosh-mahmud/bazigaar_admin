{"version":3,"file":"static/js/537.2f7400ff.chunk.js","mappings":"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","sources":["Pages/ManageHost/UpdateRole.jsx","Pages/ManageHost/AllHost.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { UnAuth } from \"../Auth/UnAuth\";\r\nimport BtnLoader from \"../../Component/Shared/BtnLoader\";\r\n\r\nconst UpdateRole = ({\r\n  setModalOpen,\r\n  isLoading,\r\n  setIsLoading,\r\n  username,\r\n  role,\r\n  handleData,\r\n  endpoint,\r\n}) => {\r\n  const [formData, setformData] = useState({\r\n    isHost: \"\",\r\n  });\r\n  const update = (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    const token = JSON.parse(localStorage.getItem(\"authInfo\"));\r\n    axios\r\n      .patch(`${endpoint}/`, formData, {\r\n        headers: {\r\n          Authorization: \"Token \" + token.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.status === \"error\") {\r\n          toast.error(res.data.msg);\r\n          setIsLoading(false);\r\n        } else {\r\n          toast.success(res.data.msg);\r\n          setIsLoading(false);\r\n          handleData();\r\n          setModalOpen(false);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        UnAuth(e);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  console.log(\"formData\", formData);\r\n  return (\r\n    <Fragment>\r\n      <form action=\"\">\r\n        {/* username */}\r\n        <div>\r\n          <p className=\"pb-2 font-poppins text-base font-normal text-blackText\">\r\n            Username\r\n          </p>\r\n          <input\r\n            type=\"text\"\r\n            className=\"mb-4 w-full rounded-lg border border-gray-400 px-4 py-3  focus:border-blue-500 focus:outline-none focus:ring-blue-500\"\r\n            defaultValue={username}\r\n            disabled={true}\r\n          />\r\n        </div>\r\n        {/* Role */}\r\n        <div>\r\n          <p className=\"pb-2 font-poppins text-base font-normal text-blackText\">\r\n            Edit Host\r\n          </p>\r\n          <select\r\n            className=\"mb-4 w-full rounded-lg border border-gray-400 px-4 py-3  focus:border-blue-500 focus:outline-none focus:ring-blue-500\"\r\n            placeholder=\"Category\"\r\n            onChange={(e) => {\r\n              setformData({\r\n                ...formData,\r\n                isHost: e.target.value,\r\n              });\r\n            }}\r\n            required={true}>\r\n            <option value=\"\">{role === true ? \"Active\" : \"Deactive\"}</option>\r\n            <option value={true}>Active</option>\r\n            <option value={false}>Deactive</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"mt-20 flex items-center justify-end gap-3 lg:gap-5\">\r\n          <button\r\n            onClick={() => setModalOpen(false)}\r\n            className=\"flex items-center justify-center gap-2 rounded-lg bg-[#F56E6E] px-4 py-2 font-poppins text-base font-normal text-white\">\r\n            <svg\r\n              style={{ color: \"#fff\" }}\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"20\"\r\n              height=\"20\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              className=\"feather feather-x cursor-pointer\">\r\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n            </svg>{\" \"}\r\n            Cancel\r\n          </button>\r\n          {isLoading ? (\r\n            <BtnLoader />\r\n          ) : (\r\n            <button\r\n              type=\"submit\"\r\n              onClick={(e) => update(e)}\r\n              className=\"flex items-center justify-center gap-2 rounded-lg bg-[#63AD6F] px-4 py-2 font-poppins text-base font-normal text-white\">\r\n              <svg\r\n                style={{ color: \"#fff\" }}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"20\"\r\n                height=\"20\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                className=\"feather feather-check\">\r\n                <polyline points=\"20 6 9 17 4 12\" />\r\n              </svg>{\" \"}\r\n              Confirm\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateRole;\r\n","import axios from \"axios\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { SearchIcon } from \"../../Assets/icons\";\r\nimport PrimaryLayout from \"../../Component/layouts/PrimaryLayout\";\r\nimport TablePagination from \"../../Component/Shared/TablePagination\";\r\nimport { UnAuth } from \"../Auth/UnAuth\";\r\nimport { ENDPOINT } from \"../../App/config/endpoint\";\r\nimport SmallModal from \"../../Component/Modals/SmallModal\";\r\nimport UpdateRole from \"./UpdateRole\";\r\n\r\nconst tableHead = [\r\n  { id: 1, name: \"SL\", width: 60 },\r\n  { id: 2, name: \"Host\", width: 40 },\r\n  { id: 3, name: \"Host Name\", width: 220 },\r\n  { id: 4, name: \"Email-Phone\", width: 180 },\r\n  { id: 6, name: \"Country\", width: 100 },\r\n  { id: 7, name: \"Joined At\", width: 180 },\r\n  { id: 8, name: \"Role\", width: 60 },\r\n  { id: 9, name: \"Action\", width: 40 },\r\n];\r\n\r\nconst AllHost = ({ isLoading, setIsLoading }) => {\r\n  const [searchState, setSearchState] = useState(\"\");\r\n  const [tableDatas, setTableDatas] = useState([]);\r\n  const [tableDatas2, setTableDatas2] = useState([]);\r\n\r\n  // fetching user data\r\n  const getAllInfo = () => {\r\n    const token = JSON.parse(localStorage.getItem(\"authInfo\"));\r\n\r\n    axios\r\n      .get(`${process.env.REACT_APP_MAIN_URL}/api${ENDPOINT.user.allUser}`, {\r\n        headers: {\r\n          Authorization: \"token \" + token.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.type === \"error\") {\r\n          toast.error(res.data.msg);\r\n        } else {\r\n          console.log(\"Res\", res.data);\r\n          setTableDatas(res.data);\r\n          setTableDatas2(res.data);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(e)\r\n        UnAuth(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllInfo();\r\n  }, []);\r\n\r\n  //   pagination\r\n  useEffect(() => {\r\n    let arr = [];\r\n    function filter() {\r\n      if (searchState !== \"\") {\r\n        tableDatas.map((dat) => {\r\n          if (\r\n            dat.username.toLowerCase().search(searchState.toLowerCase()) !==\r\n              -1 ||\r\n            dat.email.toLowerCase().search(searchState.toLowerCase()) !== -1\r\n          ) {\r\n            arr.push(dat);\r\n          }\r\n          return true;\r\n        });\r\n      } else {\r\n        tableDatas.map((dat) => {\r\n          arr.push(dat);\r\n          return true;\r\n        });\r\n      }\r\n      return arr;\r\n    }\r\n    filter();\r\n    setTableDatas2(arr);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchState]);\r\n\r\n  // pagination state\r\n  const [data, setData] = useState(tableDatas2);\r\n  const [currentPage, setcurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(10);\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  useEffect(() => {\r\n    setData(tableDatas2);\r\n    setcurrentPage(1);\r\n  }, [tableDatas2]);\r\n\r\n  // modal state\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [modalContent, setModalContent] = useState(\"\");\r\n\r\n  const handleEdit = (e, id, username, role) => {\r\n    e.preventDefault();\r\n    setModalOpen(true);\r\n    setModalContent(\r\n      <UpdateRole\r\n        setModalOpen={setModalOpen}\r\n        isLoading={isLoading}\r\n        setIsLoading={setIsLoading}\r\n        username={username}\r\n        role={role}\r\n        handleData={getAllInfo}\r\n        endpoint={`${process.env.REACT_APP_MAIN_URL}${ENDPOINT?.user?.updateUser}${id}`}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <PrimaryLayout pageTitle=\"Manage Host\">\r\n        <div className=\"flex flex-col items-center justify-between gap-4 py-10 md:flex-row\">\r\n          <div>\r\n            <h3 className=\"font-poppins text-xl font-semibold text-black lg:text-2xl\">\r\n              All Host\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"flex w-full flex-col items-center gap-4 md:w-[unset] md:flex-row\">\r\n            <div className=\"flex w-full items-center\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"h-[38px] w-full rounded-l-lg border border-black px-4 py-2 focus:border-black focus:outline-none\"\r\n                placeholder=\"Search host here...\"\r\n                defaultValue={searchState}\r\n                onChange={(e) => setSearchState(e.target.value)}\r\n                required={true}\r\n              />\r\n              <button\r\n                className=\"h-[38px] rounded-r-lg border border-black bg-black px-3 py-2 text-base font-semibold text-white\"\r\n                title=\"\">\r\n                <SearchIcon />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"rounded-lg bg-white pb-3 shadow-md\">\r\n          <div className=\"overflow-x-scroll\">\r\n            <table className=\"w-full\">\r\n              <thead className=\"w-full bg-[#F1F3F7]\">\r\n                <tr className=\"h-16 w-full\">\r\n                  {tableHead.map((thead) => {\r\n                    return (\r\n                      <th\r\n                        style={{ minWidth: thead.width }}\r\n                        key={thead.id}\r\n                        className={`px-2 text-left font-inter text-base font-medium`}>\r\n                        {thead.name}\r\n                      </th>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"w-full\">\r\n                {currentItems.map((tbody, i) => {\r\n                  const WithoutT = tbody.date_joined.split(\"T\");\r\n                  const set = new Set(WithoutT);\r\n                  const [first] = set;\r\n                  return (\r\n                    tbody?.isHost === true && (\r\n                      <tr\r\n                        key={tbody.id}\r\n                        className=\"h-20 bg-white text-sm leading-none text-gray-800 hover:bg-gray-100\">\r\n                        <td className=\"px-2\">\r\n                          <p className=\"text-left font-poppins text-base font-normal\">\r\n                            {(currentPage - 1) * 10 + i + 1 < 10\r\n                              ? `0${(currentPage - 1) * 10 + i + 1}`\r\n                              : (currentPage - 1) * 10 + i + 1}\r\n                          </p>\r\n                        </td>\r\n                        <td className=\"px-2\">\r\n                          <div className=\"h-10 w-10\">\r\n                            {tbody.profile_picture !== null ? (\r\n                              <img\r\n                                className=\"h-full w-full\"\r\n                                src={`${process.env.REACT_APP_MAIN_URL}${tbody?.profile_picture}`}\r\n                                // src={tbody?.profile_picture}\r\n                                alt={tbody?.username}\r\n                              />\r\n                            ) : (\r\n                              <p className=\"text-left font-poppins text-base font-normal\">\r\n                                N/A\r\n                              </p>\r\n                            )}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-2\">\r\n                          <p className=\"text-left font-poppins text-base font-normal\">\r\n                            {tbody?.first_name !== \"\" && tbody?.last_name !== \"\"\r\n                              ? (tbody?.first_name, tbody?.last_name)\r\n                              : \"N/A\"}\r\n                          </p>\r\n                        </td>\r\n                        <td className=\"px-2\">\r\n                          <p className=\"text-left font-poppins text-base font-normal\">\r\n                            {tbody?.email} - {tbody?.countryCode}\r\n                            {tbody?.phoneNumber}\r\n                          </p>\r\n                        </td>\r\n                        <td className=\"px-2\">\r\n                          <p className=\"text-left font-poppins text-base font-normal\">\r\n                            {tbody?.country === null ? \"N/A\" : tbody?.country}\r\n                          </p>\r\n                        </td>\r\n                        <td className=\"px-2\">\r\n                          <p className=\"text-left font-poppins text-base font-normal\">\r\n                            {first}\r\n                          </p>\r\n                        </td>\r\n                        <td className=\"px-2\">\r\n                          {tbody?.isHost ? (\r\n                            <p\r\n                              className={`w-fit rounded-full\r\n                           bg-[#63ad6f24] px-3 py-2 font-inter text-[14px] font-medium text-[#63AD6F]`}>\r\n                              Host\r\n                            </p>\r\n                          ) : (\r\n                            <p\r\n                              className={`w-fit rounded-full\r\n                             bg-[#f768682b] px-3 py-2 font-inter text-[14px] font-medium text-[#F76868]`}>\r\n                              N/A\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                        <td className=\"px-2\">\r\n                          <svg\r\n                            onClick={(e) =>\r\n                              handleEdit(\r\n                                e,\r\n                                tbody?.id,\r\n                                tbody?.username,\r\n                                tbody?.isHost\r\n                              )\r\n                            }\r\n                            className=\"cursor-pointer\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"18\"\r\n                            height=\"17\"\r\n                            viewBox=\"0 0 18 17\"\r\n                            fill=\"none\">\r\n                            <path\r\n                              d=\"M11.2815 3.19257L2.63473 11.8393L1.5 16L5.66069 14.8653L14.3074 6.21853M11.2815 3.19257L12.8473 1.6267C13.046 1.42801 13.2819 1.2704 13.5415 1.16287C13.8011 1.05534 14.0793 1 14.3603 1C14.6413 1 14.9195 1.05534 15.1791 1.16287C15.4387 1.2704 15.6746 1.42801 15.8733 1.6267C16.072 1.82538 16.2296 2.06126 16.3371 2.32086C16.4447 2.58045 16.5 2.85869 16.5 3.13968C16.5 3.42066 16.4447 3.6989 16.3371 3.95849C16.2296 4.21809 16.072 4.45397 15.8733 4.65266L14.3074 6.21853M11.2815 3.19257L14.3074 6.21853\"\r\n                              stroke=\"#0EAB8B\"\r\n                              strokeWidth=\"1.5\"\r\n                              strokeLinecap=\"round\"\r\n                              strokeLinejoin=\"round\"\r\n                            />\r\n                          </svg>\r\n                        </td>\r\n\r\n                        {/* <td className=\"relative px-2\">\r\n                        <div\r\n                          className=\"rounded-full\"\r\n                          onClick={() => setShow(!show)}>\r\n                          {show ? (\r\n                            <ul className=\"absolute top-5 right-5 z-10 min-w-[200px] rounded border-r bg-white p-10 shadow\">\r\n                              <li className=\"w-full cursor-pointer items-center justify-between text-gray-700 hover:text-indigo-700\">\r\n                                Edit\r\n                              </li>\r\n                              <li className=\"mt-4 w-full cursor-pointer items-center justify-between text-gray-700 hover:text-indigo-700\">\r\n                                Block\r\n                              </li>\r\n                              <li className=\"mt-4 w-full cursor-pointer items-center justify-between text-gray-700 hover:text-indigo-700\">\r\n                                View Details\r\n                              </li>\r\n                            </ul>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          <button className=\"relative px-2\">\r\n                            <ThreeDotIcon />\r\n                          </button>\r\n                        </div>\r\n                      </td> */}\r\n                      </tr>\r\n                    )\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <TablePagination\r\n            data={data}\r\n            currentPage={currentPage}\r\n            setcurrentPage={setcurrentPage}\r\n            itemsPerPage={itemsPerPage}\r\n          />\r\n        </div>\r\n      </PrimaryLayout>\r\n\r\n      <SmallModal\r\n        title=\"Edit Host\"\r\n        modalOpen={modalOpen}\r\n        setModalOpen={setModalOpen}\r\n        modalContent={modalContent}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AllHost;\r\n"],"names":["_ref","setModalOpen","isLoading","setIsLoading","username","role","handleData","endpoint","_useState","useState","isHost","_useState2","_slicedToArray","formData","setformData","console","log","_jsx","Fragment","children","_jsxs","action","className","type","defaultValue","disabled","placeholder","onChange","e","_objectSpread","target","value","required","onClick","style","color","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","BtnLoader","preventDefault","token","JSON","parse","localStorage","getItem","axios","patch","concat","headers","Authorization","then","res","data","status","toast","error","msg","success","catch","UnAuth","update","points","tableHead","id","name","searchState","setSearchState","_useState3","_useState4","tableDatas","setTableDatas","_useState5","_useState6","tableDatas2","setTableDatas2","getAllInfo","get","process","ENDPOINT","user","allUser","useEffect","arr","map","dat","toLowerCase","search","email","push","_useState7","_useState8","setData","_useState9","_useState10","currentPage","setcurrentPage","_useState11","itemsPerPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","_useState13","_useState14","modalOpen","_useState15","_useState16","modalContent","setModalContent","PrimaryLayout","pageTitle","title","SearchIcon","thead","minWidth","tbody","i","WithoutT","date_joined","split","set","Set","first","profile_picture","src","alt","first_name","last_name","countryCode","phoneNumber","country","_ENDPOINT$user","UpdateRole","updateUser","handleEdit","d","TablePagination","SmallModal"],"sourceRoot":""}