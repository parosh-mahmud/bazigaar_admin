{"version":3,"file":"static/js/673.e0f5d2ff.chunk.js","mappings":"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","sources":["Pages/Lottery/ManualDraw.jsx"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport PrimaryLayout from \"../../Component/layouts/PrimaryLayout\";\r\nimport { CartIcon, ClockIcon } from \"../../Assets/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { ENDPOINT } from \"../../App/config/endpoint\";\r\nimport { UnAuth } from \"../Auth/UnAuth\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst formatTime = (timeInSeconds) => {\r\n    const hours = Math.floor(timeInSeconds / 3600);\r\n    const minutes = Math.floor((timeInSeconds % 3600) / 60);\r\n    const seconds = timeInSeconds % 60;\r\n    return `${hours}h:${minutes.toString().padStart(2, \"0\")}m:${seconds\r\n        .toString()\r\n        .padStart(2, \"0\")}s`;\r\n};\r\n\r\nconst Lottery = () => {\r\n\r\n    const [lotteries, setLotteries] = useState([]);\r\n    // console.log(\"allLottery\", allLottery);\r\n\r\n    // useEffect(() => {\r\n    //     if (allLottery.length > 0) {\r\n    //         setRemainingTime(allLottery[0].remaining_time_seconds);\r\n    //     }\r\n    // }, [allLottery]);\r\n\r\n    // useEffect(() => {\r\n    //     const interval = setInterval(() => {\r\n    //         setRemainingTime((prevTime) => Math.max(0, prevTime - 1));\r\n    //     }, 1000);\r\n    //     return () => clearInterval(interval);\r\n    // }, []);\r\n\r\n    const getData = async () => {\r\n        const token = JSON.parse(localStorage.getItem(\"authInfo\"));\r\n        try {\r\n            const response = await axios.get(\r\n              `${process.env.REACT_APP_MAIN_URL}${ENDPOINT.ticket.getTicket}`,\r\n              {\r\n                headers: {\r\n                  Authorization: \"Token \" + token.token,\r\n                },\r\n              }\r\n            );\r\n            if (response.data.status === \"error\") {\r\n                toast.error(response.data.msg);\r\n            } else {\r\n                setLotteries(response.data);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"error\", error);\r\n            UnAuth(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        const interval = setInterval(() => {\r\n            setLotteries((prevLotteries) => {\r\n                return prevLotteries.map((lottery) => {\r\n                    return {\r\n                        ...lottery,\r\n                        remaining_time_seconds: Math.max(\r\n                            0,\r\n                            lottery.remaining_time_seconds - 1\r\n                        ),\r\n                    };\r\n                });\r\n            });\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <PrimaryLayout pageTitle=\"Manual Draw\">\r\n                <div className=\"mt-6 w-full rounded-[6px] shadow-md lg:mt-10 lg:rounded-[8px]\">\r\n                    <div className=\"w-full rounded-t-[6px] bg-[#F1F3F7] p-3 text-xl font-medium lg:rounded-t-[8px] lg:p-4\">\r\n                        Select A Lottery To Draw\r\n                    </div>\r\n                    <div className=\"w-full rounded-b-[6px] bg-white p-3 lg:rounded-b-[8px] lg:p-5\">\r\n                        {lotteries.map((val, index) => {\r\n                            return (\r\n                                <div\r\n                                    className=\"mb-4 grid w-full grid-cols-1 gap-8 last:mb-0 lg:w-fit lg:grid-cols-2 lg:gap-24\"\r\n                                    key={index}\r\n                                >\r\n                                    <Link\r\n                                        to={`/manage-lottery/package/${val?.LotteryId}`}\r\n                                        className=\"flex w-full items-center justify-between  rounded-md border bg-black p-4 text-white shadow-md lg:w-[350px]\"\r\n                                    >\r\n                                        <span className=\"text-xl font-bold\">\r\n                                            {val?.LotteryName}\r\n                                        </span>\r\n                                        <div>\r\n                                            <span className=\"flex items-center justify-center rounded-full bg-[#D3AC46] p-3\">\r\n                                                <CartIcon />\r\n                                            </span>\r\n                                        </div>\r\n                                    </Link>\r\n                                    <div className=\"flex w-full items-center justify-between rounded-md border p-4 shadow-md lg:w-[350px]\">\r\n                                        <span className=\"text-xl font-bold\">\r\n                                            {formatTime(\r\n                                                val.remaining_time_seconds\r\n                                            )}\r\n                                        </span>\r\n                                        <span className=\"\">\r\n                                            <ClockIcon />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </PrimaryLayout>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Lottery;\r\n"],"names":["formatTime","timeInSeconds","hours","Math","floor","minutes","seconds","concat","toString","padStart","_useState","useState","_useState2","_slicedToArray","lotteries","setLotteries","getData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","wrap","_context","prev","next","JSON","parse","localStorage","getItem","axios","get","process","ENDPOINT","ticket","getTicket","headers","Authorization","sent","data","status","toast","error","msg","t0","console","UnAuth","stop","apply","arguments","useEffect","interval","setInterval","prevLotteries","map","lottery","_objectSpread","remaining_time_seconds","max","clearInterval","_jsx","Fragment","children","PrimaryLayout","pageTitle","_jsxs","className","val","index","Link","to","LotteryId","LotteryName","CartIcon","ClockIcon"],"sourceRoot":""}